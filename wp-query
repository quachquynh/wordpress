https://gist.github.com/Dimasmagadan/2053399
/***************************
*        PHÂN TRANG        *
***************************/
	$paged = ( get_query_var( 'paged' ) ) ? get_query_var( 'paged' ) : 1;
	$args = array(
		//'category__in' => array(110,111),
		'post_type' => 'post',
		'posts_per_page' => 4,
		'cat' => 110,
		'paged' => $paged,
		'post_status' => 'publish', 
		'order'=>'DESC',
		'orderby'=>'ID',
	);
	$wp_query = new WP_Query( $args );

	if ( $wp_query->have_posts() ) :
	while ( $wp_query->have_posts() ) : $wp_query->the_post(); 
		the_title();
	endwhile; 
	endif;

/***************************
*   GET POST CATEGORY      *
***************************/
// Lấy bài viết theo category
	$related = get_posts( 
		array( 
			'category__in' => wp_get_post_categories($post->ID),
			'numberposts' => 5, 
			'post__not_in' => array($post->ID) )
		);
		if( $related ) foreach( $related as $post ) {
			setup_postdata($post);
		}
		wp_reset_postdata(); 

// Lấy bài viết theo taxonomy

	$args = array(
	'post_type' => 'recipe_cpt',
	'tax_query' => array(
	    array(
	    'taxonomy' => 'recipe_tx',
	    'field' => 'term_id',
	    'terms' => 37
	     )
	  )
	);
	$query = new WP_Query( $args );

// LẤY BÀI VIẾT THEO CATEGORY
	$args=array(
	'posts_per_page' => 50,    
	'post_type' => 'my_custom_type',
	//'cat' => ID,
	'tax_query' => array(
	    array(
		'taxonomy' => 'category', //double check your taxonomy name in you dd 
		'field'    => 'id',
		'terms'    => $cat_id,
	    ),
	   ),
	 );
	$wp_query = new WP_Query( $args );

// LẤY POST THEO NHIỀU CATEGORY
$args = array(
    'post_type'             => 'product',
    'post_status'           => 'publish',
    'ignore_sticky_posts'   => 1,
    'posts_per_page'        => '12',
    'tax_query'             => array(
        array(
            'taxonomy'      => 'product_cat',
            'field' => 'term_id', //This is optional, as it defaults to 'term_id'
            'terms'         => 26,
            'operator'      => 'IN' // Possible values are 'IN', 'NOT IN', 'AND'.
        ),
        array(
            'taxonomy'      => 'product_visibility',
            'field'         => 'slug',
            'terms'         => 'exclude-from-catalog', // Possibly 'exclude-from-search' too
            'operator'      => 'NOT IN'
        )
    )
);
$products = new WP_Query($args);
var_dump($products);

// WQ_QUERY THEO SEARCH
	$args = array(
	    /*everything but tax_query defined here*/
	    'tax_query' => array(
		'relation' => 'AND',
		array(
		    'taxonomy' => 'test',
		    'field'    => 'slug',
		    'terms'    => array( 'testa' ),
		),
		array(
		    'taxonomy' => 'coffee',
		    'field'    => 'slug',
		    'terms'    => array( 'coffeec' ),
		),
	    ),
	);
	
$producttype = $_GET['ProductType'];
$businessunit = $_GET['BusinessUnit'];
$products = new WP_Query( array( 
  'post_type' => 'products',
  'posts_per_page' => 15,
  'orderby' => 'title',
  'order'   => 'ASC',
  'paged' => $paged,
  'tax_query' => array(
    'relation' => 'OR',
     array(
       'taxonomy' => 'producttype',
       'field' => 'name',
       'terms' => $producttype
     ),
     array(
       'taxonomy' => 'businessunit',
       'field' => 'name',
       'terms' => $businessunit
     )
  )

https://generatewp.com/retrieving-results-filtered-wp_tax_query/


/*********************************
*   WIDGET CUSTOM WORDPRESS      *
*********************************/
https://qodeinteractive.com/magazine/create-wordpress-custom-widget/
https://psdtowp.net/resources/wordpress-widgets/how-to-make-custom-widget-wordpress.html
https://projectsengine.com/how-to-create-a-wordpress-custom-widget/

class Widget_Name extends WP_Widget {
function __construct() {
// Some code here
}
public function widget( $args, $instance ) {
// Some code here
}
public function form( $instance ) {
// Some code here
}
public function update( $new_instance, $old_instance ) {
// Some code here
}
}function name_of_the_register_function() {
register_widget( 'Widget_Name' );
}add_action( 'widgets_init', 'name_of_the_register_function' );



/*********************************
*   WIDGET RECENT POSTS      *
*********************************/
https://wordpress.stackexchange.com/questions/99792/custom-widget-using-get-categories-select-menu-dropdown
<?php
class Custom_Widget extends WP_Widget {

	public function __construct() {
	    parent::__construct(
        // Base ID of your widget
            'cw_widget',
        // Widget name will appear in UI
            __('Custom Widget', 'cw_widget_domain'),
        // Widget description
            array(
            'description' => __('Sample widget based on Testing Widgets',
                                     'cw_widget_domain')
        ));
	}

	public function widget($args, $instance) {

		$title = apply_filters('widget_title', $instance['title']);
		$post_numbers = apply_filters('widget_title', $instance['post_numbers']);
		$cat_id = apply_filters('widget_title', $instance['cat_id']);

		echo $args['before_widget'];
        if (!empty($title))
            echo $args['before_title'] . $title . $args['after_title'];
        //echo __($title, 'cw_widget_domain');
        echo $args['after_widget'];

		$args = array(
		'post_type' => 'post',
		'posts_per_page' => $post_numbers,
		'cat' => $cat_id,
		'order' => 'desc',
		'orderby' => 'ID', // Sắp xếp bài viết theo thứ tự ID
		);
		$query_posts = new WP_Query( $args );
		echo '<div class="list-post">';
		if( $query_posts->have_posts() ):
		while( $query_posts->have_posts() ) : $query_posts->the_post();
			
			echo '<div class="post-item">'.get_the_title().'<div>';

		endwhile;
		endif;
		echo '</div>';
		wp_reset_query();
	}

    // Widget Backend
    public function form($instance)
    {
    	$taxonomies=get_taxonomies(); 
    	$terms = get_terms($taxonomies);
    	$defaults = array(
		        'title' => 'Chọn chuyên mục'
		    );
    	$instance = wp_parse_args( (array) $instance, $defaults ); 
    	
        if (isset($instance['title']) || isset($instance['post_numbers']) || isset($instance['cat_id']) ) {
            $title = $instance['title'];
            $post_numbers = $instance['post_numbers'];
            $cat_id = $instance['cat_id'];
        } else {
            $title = __('', 'cw_widget_domain');
        }
      // Widget admin form
		?>
			<table>
				<tr>
					<td>
						<label for="<?php
						        echo $this->get_field_id('title');
						?>"><?php
						        _e('Tiêu đề:');
						?>
					</td>
					<td>
						<input class="widefat" id="<?php
						        echo $this->get_field_id('title');
						?>" name="<?php
						        echo $this->get_field_name('title');
						?>" type="text" value="<?php
						        echo esc_attr($title);
						?>" />
					</td>
				</tr>
				<tr>
					<td>
						<label for="<?php
						        echo $this->get_field_id('post_numbers');
						?>"><?php
						        _e('Số bài viết:');
						?>
					</td>
					<td>
						<input class="post_numbers" id="<?php
						        echo $this->get_field_id('post_numbers');
						?>" name="<?php
						        echo $this->get_field_name('post_numbers');
						?>" type="text" value="<?php
						        echo esc_attr($post_numbers);
						?>" />
						
					</td>
				</tr>
				<tr>
					<td>
						<label for="<?php
						        echo $this->get_field_id('cat_id');
						?>"><?php
						        _e('Chuyên mục:');
						?>
					</td>
					<td>
					    <!-- Category Select Menu -->   
					        <select id="<?php echo $this->get_field_id('cat_id'); ?>" name="<?php echo $this->get_field_name('cat_id'); ?>" class="widefat" style="width:100%;">
					            <?php foreach(get_terms('category','parent=0&hide_empty=0') as $term) { ?>
					            <option <?php selected( $instance['cat_id'], $term->term_id ); ?> value="<?php echo $term->term_id; ?>"><?php echo $term->name; ?></option>
					            <?php } ?>      
					        </select>
						
					</td>
				</tr>
			</table>
		<?php
	}

	// Updating widget replacing old instances with new
	public function update($new_instance, $old_instance)
	{
	        $instance          = array();
	        $instance['title'] = (!empty($new_instance['title'])) 
	                              ? strip_tags($new_instance['title']) : '';
	        $instance['post_numbers'] = (!empty($new_instance['post_numbers'])) 
	                              ? strip_tags($new_instance['post_numbers']) : '';
	        $instance['cat_id'] = (!empty($new_instance['cat_id'])) 
	                              ? strip_tags($new_instance['cat_id']) : '';
	        return $instance;
	}
}

function cw_load_widget()
{
     register_widget('Custom_Widget');
}
add_action('widgets_init', 'cw_load_widget');
?>
